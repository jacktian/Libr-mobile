// Generated by CoffeeScript 1.7.1
(function() {
  var SettingsController, libr,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  libr = angular.module('libr.controllers.settings', ['ionic']);

  SettingsController = (function() {
    var isUserLogedIn;

    SettingsController.$inject = ['$scope', '$ionicModal', 'AuthService'];

    function SettingsController($scope, $ionicModal, AuthService) {
      this.$scope = $scope;
      this.$ionicModal = $ionicModal;
      this.AuthService = AuthService;
      this.login = __bind(this.login, this);
      this.closeModal = __bind(this.closeModal, this);
      this.loginForm = __bind(this.loginForm, this);
      this.$ionicModal.fromTemplateUrl('templates/modal/login.html', (function(_this) {
        return function(modal) {
          return _this.$scope.modal = modal;
        };
      })(this), {
        scope: this.$scope,
        animation: 'slide-in-up'
      });
      this.$scope.loginForm = this.loginForm;
      this.$scope.closeModal = this.closeModal;
      this.$scope.login = this.login;
      if (isUserLogedIn()) {
        this.$scope.isLogedIn = true;
      } else {
        this.$scope.isLogedIn = false;
      }
    }

    SettingsController.prototype.loginForm = function() {
      return this.$scope.modal.show();
    };

    SettingsController.prototype.closeModal = function() {
      return this.$scope.modal.hide();
    };

    SettingsController.prototype.login = function(user) {
      console.log(user);
      return this.AuthService.login(user, (function(_this) {
        return function(result) {
          localStorage.setItem('token', result.token);
          localStorage.setItem('email', user.email);
          return _this.closeModal();
        };
      })(this));
    };

    isUserLogedIn = function() {
      if (localStorage.getItem('token') !== null && localStorage.getItem('email') !== null) {
        return true;
      } else {
        return false;
      }
    };

    return SettingsController;

  })();

  libr.controller('SettingsController', SettingsController);

}).call(this);
